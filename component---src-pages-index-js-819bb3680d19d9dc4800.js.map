{"version":3,"sources":["webpack:///./src/layouts/PageLayout/pageLayout.js","webpack:///./src/layouts/PageLayout/index.js","webpack:///./src/components/image.js","webpack:///./src/components/WhatsNew/index.js","webpack:///./src/pages/index.js"],"names":["PageLayout","props","title","children","slug","App","Image","data","fluid","placeholderImage","childImageSharp","WhatsNew","days","updatedFiles","files","map","file","fields","name","lastUpdated","gitLogLatestDate","parseInt","isIncludeFile","includes","frontmatter","key","to","console","log","IndexPage","style","maxWidth","marginBottom"],"mappings":"4IA2BeA,G,UAnBI,SAAAC,GAAU,IACnBC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,KAEzB,OACE,oCACE,kBAAC,IAAD,CAAKF,MAAOA,IACZ,kBAACG,EAAA,EAAD,CAAKH,MAAOA,EAAOE,KAAMA,GACtBD,MCbMH,O,+GC6BAM,EAhBD,WACZ,IAAMC,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,iBAAiBC,gBAAgBF,S,wDCyC5CG,EAjEE,SAAAV,GAAU,IAAD,EACHA,EAAbW,YADgB,MACT,EADS,EAEhBL,EAFgB,OAEhBA,KAgCFM,EAFYN,EAAVO,MAEmBC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACxCC,EACJF,GAAUA,EAAOG,iBACbC,SAASJ,EAAOG,iBAAkB,KACjC,EAEDE,EAAgBN,EAAKC,OAAOb,KAAKmB,SAAS,aAE1CrB,EAAQc,EAAKQ,YAAYtB,OAASgB,EAExC,OAAIC,EAAc,GAAKA,EAAcP,IAASU,EAE1C,wBAAIG,IAAKT,EAAKC,OAAOb,MACnB,kBAAC,OAAD,CAAMsB,GAAIV,EAAKC,OAAOb,MAAOF,GAC7B,oCAAUiB,EAAV,YAIC,QAKT,OAFAQ,QAAQC,IAAIrB,GAGV,6BACE,2CACA,4BAAKM,KCvCIgB,UAhBG,WAGhB,OACE,kBAAC7B,EAAA,EAAD,CAAYE,MAHA,OAGcE,KAAK,KAC7B,yDACA,uEACA,yBAAK0B,MAAO,CAAEC,SAAS,QAAUC,aAAa,YAC5C,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAUpB,KAAM,IAChB,kBAAC,OAAD,CAAMc,GAAG,YAAT,mB","file":"component---src-pages-index-js-819bb3680d19d9dc4800.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport App from \"../../components/App\"\nimport SEO from \"../../components/seo\"\n\nimport \"../global.css\"\n\nconst PageLayout = props => {\n  const { title, children, slug } = props\n\n  return (\n    <>\n      <SEO title={title} />\n      <App title={title} slug={slug}>\n        {children}\n      </App>\n    </>\n  )\n}\n\nPageLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  slug: PropTypes.string.isRequired,\n}\n\nexport default PageLayout\n","import PageLayout from \"./pageLayout\"\n\nexport default PageLayout\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst WhatsNew = props => {\n  const { days = 3 } = props\n  const { data } = useStaticQuery(\n    graphql`\n      query WhatsNewQuery {\n        data: allFile(\n          sort: { fields: fields___gitLogLatestDate, order: DESC }\n          filter: {\n            extension: { regex: \"/mdx?/\" }\n            fields: { gitLogLatestDate: {} }\n          }\n        ) {\n          files: nodes {\n            file: childMdx {\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n              }\n            }\n            fields {\n              gitLogLatestAuthorName\n              gitLogLatestDate(difference: \"days\")\n            }\n            name\n          }\n        }\n      }\n    `\n  )\n\n  const { files } = data\n\n  const updatedFiles = files.map(({ file, fields, name }) => {\n    const lastUpdated =\n      fields && fields.gitLogLatestDate\n        ? parseInt(fields.gitLogLatestDate, 10)\n        : -1\n\n    const isIncludeFile = file.fields.slug.includes(\"_includes\")\n\n    const title = file.frontmatter.title || name\n\n    if (lastUpdated > 0 && lastUpdated < days && !isIncludeFile) {\n      return (\n        <li key={file.fields.slug}>\n          <Link to={file.fields.slug}>{title}</Link>\n          <span> - {lastUpdated} day(s)</span>\n        </li>\n      )\n    }\n    return null\n  })\n\n  console.log(data)\n\n  return (\n    <div>\n      <h2>What's new?</h2>\n      <ul>{updatedFiles}</ul>\n    </div>\n  )\n}\n\nexport default WhatsNew\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Image from \"../components/image\"\n\nimport PageLayout from \"../layouts/PageLayout\"\n\nimport WhatsNew from \"../components/WhatsNew\"\n\nconst IndexPage = () => {\n  const title = \"Home\"\n\n  return (\n    <PageLayout title={title} slug=\"/\">\n      <h1>Gatsby Documentation Site</h1>\n      <p>Welcome to the Gatsby documentation site</p>\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <Image />\n      </div>\n      <WhatsNew days={7} />\n      <Link to=\"/page-2/\">Go to page 2</Link>\n    </PageLayout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}