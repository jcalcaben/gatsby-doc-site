{"componentChunkName":"component---src-layouts-mdx-layout-mdx-layout-js","path":"/import-mdx/","result":{"data":{"mdx":{"id":"367ca40c-b942-56f3-ac17-d7b8af9b2f0d","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Embed topics\"), mdx(\"p\", null, \"You can embed content from other markdown files in your topic. Use the following \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import\"), \" syntax at the beginning of the topic.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-gfm\"\n  }), \"import <topic-name> from <path/file-name.mdx>\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"topic-name\"), \" acts as a variable that you can use to insert the content. The following example imports the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example.mdx\"), \" file and inserts the content after the Sample heading:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Filename: sample.mdx\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-gfm\"\n  }), \"import Example from './example.mdx'\\n\\nThis topic shows how to embed content from another file.\\n\\n## Sample\\n\\n<Example />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/import-mdx/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"367ca40c-b942-56f3-ac17-d7b8af9b2f0d"}}}