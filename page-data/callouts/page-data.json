{"componentChunkName":"component---src-layouts-mdx-layout-mdx-layout-js","path":"/callouts/","result":{"data":{"mdx":{"id":"b6bdb743-84e9-5b0b-9031-52ad1ffb0a46","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Callouts\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Callout = makeShortcode(\"Callout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Callouts\"), mdx(\"h2\", null, \"Tip\"), mdx(Callout, {\n    type: \"tip\",\n    header: \"Good job!\",\n    mdxType: \"Callout\"\n  }, \"This is a tip callout\", mdx(Example, {\n    mdxType: \"Example\"\n  })), mdx(\"h2\", null, \"Info\"), mdx(Callout, {\n    type: \"info\",\n    header: \"Whoah!\",\n    mdxType: \"Callout\"\n  }, \"This feature requires administrative access, so it may prompt you for an administrative password at the command line. It does not permanently elevate permissions for the dev process but instead, launches a privileged subprocess to execute one command.\"), mdx(\"h2\", null, \"Warning\"), mdx(Callout, {\n    type: \"warning\",\n    header: \"Dang!\",\n    mdxType: \"Callout\"\n  }, \"This is a warning callout\"), mdx(\"h2\", null, \"Error\"), mdx(Callout, {\n    type: \"error\",\n    header: \"Oops!\",\n    mdxType: \"Callout\"\n  }, \"These Callouts do not support **markdown**.\", mdx(\"br\", null), \"They are supposed to be simple message boxes, so should they?\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Callouts"},"fields":{"slug":"/callouts/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"b6bdb743-84e9-5b0b-9031-52ad1ffb0a46"}}}